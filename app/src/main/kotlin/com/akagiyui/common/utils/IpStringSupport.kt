package com.akagiyui.common.utils

val ipv4Regex = Regex("^((25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.){3}(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\$")
val ipv6Regex = Regex(
    "^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|" +          // 1:2:3:4:5:6:7:8
        "([0-9a-fA-F]{1,4}:){1,7}:|" +                           // 1::                1:2:3:4:5:6:7::
        "([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|" +           // 1::8               1:2:3:4:5:6::8
        "([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|" +    // 1::7:8             1:2:3:4:5::7:8
        "([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|" +    // 1::6:7:8           1:2:3:4::6:7:8
        "([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|" +    // 1::5:6:7:8         1:2:3::5:6:7:8
        "([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|" +    // 1::4:5:6:7:8       1:2::4:5:6:7:8
        "[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|" +         // 1::3:4:5:6:7:8     1::3:4:5:6:7:8
        ":((:[0-9a-fA-F]{1,4}){1,7}|:)|" +                       // ::2:3:4:5:6:7:8    ::2:3:4:5:6:7:8
        "fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]+|" +       // fe80::7:8%eth0     fe80::7:8%1
        "::(ffff(:0{1,4})?:)?" +
        "((25[0-5]|(2[0-4]|1?[0-9])?[0-9])\\.){3}" +
        "(25[0-5]|(2[0-4]|1?[0-9])?[0-9])|" +            // ::255.255.255.255  ::ffff:255.255.255.255
        "([0-9a-fA-F]{1,4}:){1,4}:" +
        "((25[0-5]|(2[0-4]|1?[0-9])?[0-9])\\.){3}" +
        "(25[0-5]|(2[0-4]|1?[0-9])?[0-9]))$"            // 2001:db8:3:4::192.0.2.33  64:ff9b::192.0.2.33
)
val localIpv4Regex = Regex(
    "^(127\\.0\\.0\\.1|" +                // 127.0.0.1
        "10\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})|" +  // 10.0.0.0 到 10.255.255.255
        "172\\.(1[6-9]|2\\d|3[01])\\.(\\d{1,3})\\.(\\d{1,3})|" +  // 172.16.0.0 到 172.31.255.255
        "192\\.168\\.(\\d{1,3})\\.(\\d{1,3})|" +  // 192.168.0.0 到 192.168.255.255
        "169\\.254\\.(\\d{1,3})\\.(\\d{1,3}))$"  // 169.254.0.0 到 169.254.255.255
)
val localIpv6Regex = Regex(
    "^(" +
        "::1|" +                              // 回环地址
        "fe80:(:[0-9a-fA-F]{0,4}){0,4}%?[0-9a-zA-Z]*|" +  // 链路本地地址
        "fc00:|fd00:|" +                      // 唯一本地地址 (ULA)
        "::1$|" +
        "::$" +
        ")$"
)

/**
 * 判断是否为IPv4地址
 */
fun String.isIpv4(): Boolean {
    return ipv4Regex.matches(this)
}

/**
 * 判断是否为IPv6地址
 */
fun String.isIpv6(): Boolean {
    return ipv6Regex.matches(this)
}

/**
 * 判断是否为本地IPv4地址
 */
fun String.isLocalIpv4Address(): Boolean {
    return localIpv4Regex.matches(this)
}

/**
 * 判断是否为本地IPv6地址
 */
fun String.isLocalIpv6Address(): Boolean {
    return localIpv6Regex.matches(this)
}
