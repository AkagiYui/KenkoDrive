name: Demo Deploy Pipeline
on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
      env:
        http_proxy: ${{ secrets.HTTP_PROXY }}
        https_proxy: ${{ secrets.HTTP_PROXY }}
      volumes:
        - /srv/gradle/caches:/root/.gradle

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew assemble --no-daemon --warning-mode all

      - name: Test with Gradle
        run: ./gradlew test --no-daemon --warning-mode all

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            app/build/reports
            app/build/test-results
            easy-captcha/build/reports
            easy-captcha/build/test-results

      - name: Gotify Notification
        if: failure()
        run: curl "${{ secrets.GOTIFY_BASE_URL }}/message" \
          -X POST \
          -H "Authorization:Bearer ${{ secrets.GOTIFY_TOKEN }}" \
          -F "title=Gitea" \
          -F "message=构建失败" \
          -F "priority=5"

      - name: Build Jar Package
        run: rm app/build/libs/*.jar && ./gradlew bootJar -i

      - name: Deploy to Docker
        run: docker compose -p kenko-drive -f docker-compose-drone.yaml up -d --build application

      - name: Gotify Notification
        run: curl "${{ secrets.GOTIFY_BASE_URL }}/message" \
          -X POST \
          -H "Authorization:Bearer ${{ secrets.GOTIFY_TOKEN }}" \
          -F "title=Gitea" \
          -F "message=部署完成" \
          -F "priority=5"
