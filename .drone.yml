kind: pipeline
type: docker
name: default

trigger:
  branch: [master]

clone:
  retries: 3
  depth: 1

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: gradle-cache
    host:
      path: /srv/gradle/caches
  - name: gradle-config
    host:
      path: /srv/gradle/config
  - name: application-config
    host:
      path: /srv/kenko-drive/config

services:
  - name: redis
    image: redis:7-alpine

steps:
  - name: Gradle Build and Create Cache
    image: bellsoft/liberica-runtime-container:jdk-21-slim-musl
    volumes:
      - name: gradle-cache
        path: /root/.gradle
      - name: gradle-config
        path: /gradle-config
    commands:
      - cp /gradle-config/gradle.properties /root/.gradle/gradle.properties
      - chmod +x ./gradlew
      - ./gradlew assemble -i

  - name: Gradle Test
    image: bellsoft/liberica-runtime-container:jdk-21-slim-musl
    failure: ignore
    volumes:
      - name: gradle-cache
        path: /root/.gradle
      - name: gradle-config
        path: /gradle-config
    commands:
      - cp /gradle-config/gradle.properties /root/.gradle/gradle.properties
      - chmod +x ./gradlew
      - ./gradlew test -i

  - name: Build Jar Package
    image: bellsoft/liberica-runtime-container:jdk-21-slim-musl
    volumes:
      - name: gradle-cache
        path: /root/.gradle
      - name: gradle-config
        path: /gradle-config
    commands:
      - cp /gradle-config/gradle.properties /root/.gradle/gradle.properties
      - chmod +x ./gradlew
      - rm app/build/libs/*.jar
      - ./gradlew bootJar -i

  - name: Build and Deploy container
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: application-config
        path: /drone/src/config
    commands:
      - docker compose -p kenko-drive -f docker-compose-drone.yaml up -d --build application
